//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MadamRozikaData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MadamRozikaEntities : DbContext
    {
        public MadamRozikaEntities()
            : base("name=MadamRozikaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Article> Articles { get; set; }
        public virtual DbSet<Author> Authors { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CategoryArticleRelation> CategoryArticleRelations { get; set; }
        public virtual DbSet<CategoryGalleryRelation> CategoryGalleryRelations { get; set; }
        public virtual DbSet<CategoryNewsRelation> CategoryNewsRelations { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<CommentArticleRelation> CommentArticleRelations { get; set; }
        public virtual DbSet<CommentAuthorRelation> CommentAuthorRelations { get; set; }
        public virtual DbSet<CommentGalleryRelation> CommentGalleryRelations { get; set; }
        public virtual DbSet<CommentNewsRelation> CommentNewsRelations { get; set; }
        public virtual DbSet<Gallery> Galleries { get; set; }
        public virtual DbSet<GalleryItem> GalleryItems { get; set; }
        public virtual DbSet<Headline> Headlines { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RoleUserRelation> RoleUserRelations { get; set; }
        public virtual DbSet<Tag> Tags { get; set; }
        public virtual DbSet<TagArticleRelation> TagArticleRelations { get; set; }
        public virtual DbSet<TagGalleryRelation> TagGalleryRelations { get; set; }
        public virtual DbSet<TagNewsRelation> TagNewsRelations { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<Sp_GetNewsListWithCategoryUrl_Result> Sp_GetNewsListWithCategoryUrl(string categoryUrl)
        {
            var categoryUrlParameter = categoryUrl != null ?
                new ObjectParameter("CategoryUrl", categoryUrl) :
                new ObjectParameter("CategoryUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetNewsListWithCategoryUrl_Result>("Sp_GetNewsListWithCategoryUrl", categoryUrlParameter);
        }
    }
}
